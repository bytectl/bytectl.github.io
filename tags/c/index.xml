<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c on onenote</title>
    <link>https://onenote.bytectl.com/tags/c/</link>
    <description>Recent content in c on onenote</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Oct 2019 19:00:23 +0800</lastBuildDate>
    
	<atom:link href="https://onenote.bytectl.com/tags/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>String</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/string/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:23 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/string/</guid>
      <description>c string 注: C语言中没有字符串这个特定类型, C语言风格字符串: 以&amp;rsquo;\0&amp;rsquo;作为结束符 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    
    <item>
      <title>储存类型</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_stroge/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:21 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_stroge/</guid>
      <description>储存类型 auto static extern :extern变量又称全局变量，放在静态存储区 register 一个由C编译的程序占用的内存大致分为以下几部分： 栈区（stack）：由编译器自</description>
    </item>
    
    <item>
      <title>C基础输入输出</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_base/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:19 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_base/</guid>
      <description>printf使用(不会进行数据类型转换) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include&amp;lt;stdio.h&amp;gt;#include&amp;lt;stdlib.h&amp;gt;void main() { int x = 123456; printf(&amp;#34;%d&amp;#34;, x); //以m指定的字段宽度输出，如果数据的位数 /</description>
    </item>
    
    <item>
      <title>Bm算法</title>
      <link>https://onenote.bytectl.com/post/gist/bm/</link>
      <pubDate>Fri, 11 Oct 2019 17:32:07 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/bm/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>Perftools</title>
      <link>https://onenote.bytectl.com/post/gist/perftools/</link>
      <pubDate>Fri, 11 Oct 2019 17:20:47 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/perftools/</guid>
      <description>google-perftools google-perftools 是一款针对 C/C++ 程序的性能分析工具，它是一个遵守 BSD 协议的开源项目。使用该工具可以对 CPU时间片、内存等系统资源的分配和使用进行分析，本文将重</description>
    </item>
    
    <item>
      <title>Kmp算法</title>
      <link>https://onenote.bytectl.com/post/gist/kmp/</link>
      <pubDate>Fri, 11 Oct 2019 17:18:30 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/kmp/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>Tcmalloc</title>
      <link>https://onenote.bytectl.com/post/gist/tcmalloc/</link>
      <pubDate>Fri, 11 Oct 2019 17:16:25 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/tcmalloc/</guid>
      <description>libunwind libunwind库为基于64位CPU和操作系统的程序提供了基本的堆栈辗转开解功能，其中包括用于输出堆栈跟踪的API、用于以编程方式辗转开</description>
    </item>
    
    <item>
      <title>函数跟踪</title>
      <link>https://onenote.bytectl.com/post/gist/%E5%87%BD%E6%95%B0%E8%B7%9F%E8%B8%AA/</link>
      <pubDate>Fri, 11 Oct 2019 17:11:27 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/%E5%87%BD%E6%95%B0%E8%B7%9F%E8%B8%AA/</guid>
      <description>trace 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 /* * @Author: wuxingzhong * @Date: 2017-06-26 14:28:25 * @Email: 330332812@qq.com</description>
    </item>
    
    <item>
      <title>性能测试</title>
      <link>https://onenote.bytectl.com/post/gist/performance_test/</link>
      <pubDate>Wed, 11 Sep 2019 10:54:24 +0200</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/performance_test/</guid>
      <description>性能测试工具 生成测试 编译 和链接时,添加参数 -pg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 服务程序,添加如下代码: static void sighandler( int sig_no ) { exit(0); } int main(int argc, char* argv[]) { // 接收信号</description>
    </item>
    
  </channel>
</rss>