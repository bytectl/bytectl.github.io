<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>onenote</title>
    <link>https://onenote.bytectl.com/</link>
    <description>Recent content on onenote</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 11 Oct 2019 19:00:23 +0800</lastBuildDate>
    
	<atom:link href="https://onenote.bytectl.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>String</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/string/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:23 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/string/</guid>
      <description>c string 注: C语言中没有字符串这个特定类型, C语言风格字符串: 以&amp;rsquo;\0&amp;rsquo;作为结束符 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    
    <item>
      <title>Linux module</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/linux_module/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:22 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/linux_module/</guid>
      <description>module 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include&amp;lt;linux/init.h&amp;gt; //驱动初始化#include&amp;lt;linux/module.h&amp;gt; //驱动模块 MODULE_LICENSE(&amp;#34;Dual BSD/GPL&amp;#34;); //遵循lin</description>
    </item>
    
    <item>
      <title>C_point</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_point/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:21 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_point/</guid>
      <description>c指针 改变一个变量，需要这个变量的地址 如果变量是数据，就需要指针 保存变量的地址 /如果是指针，就需要二级指针保存指针变量的地址 指向行的指针 (指</description>
    </item>
    
    <item>
      <title>储存类型</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_stroge/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:21 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_stroge/</guid>
      <description>储存类型 auto static extern :extern变量又称全局变量，放在静态存储区 register 一个由C编译的程序占用的内存大致分为以下几部分： • 栈区（stack）：由编译器</description>
    </item>
    
    <item>
      <title>C_operater</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_operater/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:20 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_operater/</guid>
      <description>汇编语言&amp;amp;C语言混合编程 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #include&amp;lt;stdio.h&amp;gt;#include&amp;lt;stdlib.h&amp;gt;void main() { int num=5; //插入汇编语言 _asm{ mov eax,num add eax,5 mov num,eax } printf(&amp;#34;%d\n&amp;#34;, num); system(&amp;#34;pause&amp;#34;); } +,- 1 2 3 4 5 6 7 8 9 10 #include&amp;lt;stdio.h&amp;gt;#include&amp;lt;stdlib.h&amp;gt;void main()</description>
    </item>
    
    <item>
      <title>C_base</title>
      <link>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_base/</link>
      <pubDate>Fri, 11 Oct 2019 19:00:19 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/lang/c_c&#43;&#43;/c_base/</guid>
      <description>c base printf使用(不会进行数据类型转换) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 #include&amp;lt;stdio.h&amp;gt;#include&amp;lt;stdlib.h&amp;gt;void main() { int x = 123456; printf(&amp;#34;%d&amp;#34;, x); //以m指定的字段宽度输出，如果数据的位</description>
    </item>
    
    <item>
      <title>Bm算法</title>
      <link>https://onenote.bytectl.com/post/gist/bm/</link>
      <pubDate>Fri, 11 Oct 2019 17:32:07 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/bm/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>Perftools</title>
      <link>https://onenote.bytectl.com/post/gist/perftools/</link>
      <pubDate>Fri, 11 Oct 2019 17:20:47 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/perftools/</guid>
      <description>google-perftools google-perftools 是一款针对 C/C++ 程序的性能分析工具，它是一个遵守 BSD 协议的开源项目。使用该工具可以对 CPU时间片、内存等系统资源的分配和使用进行分析，本文将重</description>
    </item>
    
    <item>
      <title>Kmp算法</title>
      <link>https://onenote.bytectl.com/post/gist/kmp/</link>
      <pubDate>Fri, 11 Oct 2019 17:18:30 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/kmp/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>Tcmalloc</title>
      <link>https://onenote.bytectl.com/post/gist/tcmalloc/</link>
      <pubDate>Fri, 11 Oct 2019 17:16:25 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/tcmalloc/</guid>
      <description>libunwind libunwind库为基于64位CPU和操作系统的程序提供了基本的堆栈辗转开解功能，其中包括用于输出堆栈跟踪的API、用于以编程方式辗转开</description>
    </item>
    
    <item>
      <title>函数跟踪</title>
      <link>https://onenote.bytectl.com/post/gist/%E5%87%BD%E6%95%B0%E8%B7%9F%E8%B8%AA/</link>
      <pubDate>Fri, 11 Oct 2019 17:11:27 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/%E5%87%BD%E6%95%B0%E8%B7%9F%E8%B8%AA/</guid>
      <description>trace 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 /* * @Author: wuxingzhong * @Date: 2017-06-26 14:28:25 * @Email: 330332812@qq.com</description>
    </item>
    
    <item>
      <title>函数备忘</title>
      <link>https://onenote.bytectl.com/post/gist/%E5%87%BD%E6%95%B0%E5%A4%87%E5%BF%98/</link>
      <pubDate>Fri, 11 Oct 2019 17:10:46 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/%E5%87%BD%E6%95%B0%E5%A4%87%E5%BF%98/</guid>
      <description>获取key-value 1 strtok gist 将结构体映射到0地址,计算成员偏移量 1 (int)&amp;amp;(((TYPE*)0)-&amp;gt;MEMBER ) 将结构体映射到0地址,计算成员占用大小 1 sizeof(((TYPE*)0)-&amp;gt;MEMBER ) ) 符号转字符串 1 #define STR(s) #s 字符</description>
    </item>
    
    <item>
      <title>Spring Cloud</title>
      <link>https://onenote.bytectl.com/post/framework/spring/spring-cloud/</link>
      <pubDate>Fri, 11 Oct 2019 17:01:53 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/framework/spring/spring-cloud/</guid>
      <description>start spring-boot-starter-web：全栈Web开发模块，包含嵌入式Tomcat、Spring MVC。 spring-boot-s</description>
    </item>
    
    <item>
      <title>Jvm资源限制</title>
      <link>https://onenote.bytectl.com/post/framework/spring/jvm%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/</link>
      <pubDate>Fri, 11 Oct 2019 16:57:19 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/framework/spring/jvm%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/</guid>
      <description>前言 参考: https://qingmu.io/2018/12/17/How-to-securely-limit-JVM-resources-in-a-container/ Java与Docker的结合，虽然更好的解决了application的封装问题。但也存在着不兼容，比如Java并不能自动的发现D</description>
    </item>
    
    <item>
      <title>Iptable</title>
      <link>https://onenote.bytectl.com/post/software/iptable/</link>
      <pubDate>Thu, 10 Oct 2019 19:24:53 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/software/iptable/</guid>
      <description>限流 1 2 3 4 5 iptables -A INPUT -p tcp –dport 443 -m limit --limit 100/sec --limit-burst 1000 -j ACCEPT -m limit --limit 100/sec 限制每秒连接请求数 –limit-burst：触发阀值，一次涌入数据包数量 连接追</description>
    </item>
    
    <item>
      <title>Httpd Tools</title>
      <link>https://onenote.bytectl.com/post/software/httpd-tools/</link>
      <pubDate>Thu, 10 Oct 2019 19:22:49 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/software/httpd-tools/</guid>
      <description>install 1 yum install httpd-tools ab 1 2 # 压测短连接 ab -n 1000 -c 100 10.108.167.100:9040/info</description>
    </item>
    
    <item>
      <title>Gitbook</title>
      <link>https://onenote.bytectl.com/post/software/gitbook/</link>
      <pubDate>Thu, 10 Oct 2019 19:20:37 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/software/gitbook/</guid>
      <description>安装 1 npm install gitbook-cli -g 安装calibre 参考 用于生成epub和mobi格式电子书 1 wget -nv -O- https://download.calibre-ebook.com/linux-installer.py | sudo python -c &amp;#34;import sys; main=lambda:sys.stderr.write(&amp;#39;Download failed\n&amp;#39;); exec(sys.stdin.read()); main()&amp;#34; 使用 1 2 3 4 5 6 # 创建书籍 gitbook init # 启动预</description>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://onenote.bytectl.com/post/hugo/</link>
      <pubDate>Thu, 10 Oct 2019 09:23:18 +0800</pubDate>
      
      <guid>https://onenote.bytectl.com/post/hugo/</guid>
      <description>安装 1 2 3 4 5 6 # 使用gorpoxy export GOPROXY=https://goproxy.cn export GO111MODULE=on go get -v github.com/gohugoio/hugo hugo version 简单使用流程 建立site 1 hugo new site bytectl 配置主题 1 2 3 4 5 git clone https://github.com/xxx themes/xxx # 配置 cp themes/xxx/exampleSite/config.yaml ./ vim config.yaml 编写文章</description>
    </item>
    
    <item>
      <title>性能测试</title>
      <link>https://onenote.bytectl.com/post/gist/performance_test/</link>
      <pubDate>Wed, 11 Sep 2019 10:54:24 +0200</pubDate>
      
      <guid>https://onenote.bytectl.com/post/gist/performance_test/</guid>
      <description>性能测试工具 生成测试 编译 和链接时,添加参数 -pg 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 服务程序,添加如下代码: static void sighandler( int sig_no ) { exit(0); } int main(int argc, char* argv[]) { // 接收信号</description>
    </item>
    
  </channel>
</rss>